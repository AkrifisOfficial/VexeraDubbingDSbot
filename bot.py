import os
import discord
from discord.ext import commands
from discord import app_commands
from flask import Flask, request, jsonify
import hmac
import hashlib
import asyncio
import logging
import threading
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler('bot.log')
    ]
)
logger = logging.getLogger('VexeraBot')

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
CHANNEL_ID = int(os.getenv('CHANNEL_ID'))
GITHUB_WEBHOOK_SECRET = os.getenv('GITHUB_WEBHOOK_SECRET')
PORT = int(os.getenv('PORT', 8000))
ADMIN_ROLE_ID = int(os.getenv('ADMIN_ROLE_ID', 0))  # ID —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not DISCORD_TOKEN:
    logger.critical("‚ùå DISCORD_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    sys.exit(1)

if not CHANNEL_ID:
    logger.critical("‚ùå CHANNEL_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    sys.exit(1)

logger.info(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏: CHANNEL_ID={CHANNEL_ID}, ADMIN_ROLE_ID={ADMIN_ROLE_ID}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
intents = discord.Intents.default()
intents.message_content = True
intents.members = True  # –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

bot = commands.Bot(
    command_prefix='!', 
    intents=intents,
    help_command=None
)

app = Flask(__name__)

@bot.event
async def on_ready():
    logger.info(f'‚úÖ –ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω!')
    await bot.change_presence(activity=discord.Activity(
        type=discord.ActivityType.watching, 
        name="–∑–∞ —Ä–µ–ª–∏–∑–∞–º–∏ VexeraDubbing"
    ))
    
    try:
        synced = await bot.tree.sync()
        logger.info(f"üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∫–æ–º–∞–Ω–¥: {len(synced)}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def is_admin(interaction: discord.Interaction) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    # 1. –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞
    if interaction.user.guild_permissions.administrator:
        return True
    
    # 2. –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if ADMIN_ROLE_ID:
        role = discord.utils.get(interaction.user.roles, id=ADMIN_ROLE_ID)
        if role:
            return True
    
    return False

# –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ (–¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å–µ–º)
@bot.tree.command(name="ping", description="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞")
async def ping(interaction: discord.Interaction):
    try:
        latency = round(bot.latency * 1000)
        await interaction.response.send_message(
            f"üèì Pong! –ó–∞–¥–µ—Ä–∂–∫–∞: {latency}–º—Å",
            ephemeral=True
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ ping: {e}")

# –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
@bot.tree.command(name="check_admin", description="–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
@app_commands.check(is_admin)
async def check_admin(interaction: discord.Interaction):
    try:
        await interaction.response.send_message(
            "‚úÖ –£ –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!",
            ephemeral=True
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ check_admin: {e}")

# –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
@bot.tree.command(name="test_send", description="–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã)")
@app_commands.check(is_admin)
async def test_send(interaction: discord.Interaction):
    await interaction.response.defer(ephemeral=True)
    
    try:
        channel = bot.get_channel(CHANNEL_ID)
        if not channel:
            await interaction.followup.send("‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)
            return
        
        await channel.send("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞!")
        await interaction.followup.send("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", ephemeral=True)
    except discord.Forbidden:
        await interaction.followup.send("‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª!", ephemeral=True)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ test_send: {e}")
        await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

# –†—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
@bot.tree.command(name="announce", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã)")
@app_commands.check(is_admin)
async def announce(interaction: discord.Interaction, message: str):
    await interaction.response.defer(ephemeral=True)
    
    try:
        channel = bot.get_channel(CHANNEL_ID)
        if not channel:
            await interaction.followup.send("‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)
            return
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not message.strip():
            await interaction.followup.send("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!", ephemeral=True)
            return
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if len(message) > 2000:
            await interaction.followup.send("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å. 2000 —Å–∏–º–≤–æ–ª–æ–≤)!", ephemeral=True)
            return
        
        await channel.send(message)
        await interaction.followup.send("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", ephemeral=True)
    except discord.Forbidden:
        await interaction.followup.send("‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª!", ephemeral=True)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ announce: {e}")
        await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–æ–≤
@bot.tree.error
async def on_app_command_error(interaction: discord.Interaction, error):
    if isinstance(error, app_commands.CheckFailure):
        await interaction.response.send_message(
            "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞!",
            ephemeral=True
        )
    else:
        logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã: {error}")
        await interaction.response.send_message(
            f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {str(error)}",
            ephemeral=True
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ GitHub –≤–µ–±—Ö—É–∫–∞
@app.route('/webhook', methods=['POST'])
def github_webhook():
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏
        signature = request.headers.get('X-Hub-Signature-256', '')
        payload = request.data
        
        if not verify_signature(payload, signature, GITHUB_WEBHOOK_SECRET):
            logger.error("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –≤–µ–±—Ö—É–∫–∞")
            return jsonify({"status": "invalid signature"}), 401

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–ª–∏–∑–∞
        event = request.headers.get('X-GitHub-Event')
        if event == 'release':
            data = request.json
            if data.get('action') == 'published':
                release = data.get('release', {})
                asyncio.run_coroutine_threadsafe(
                    send_release_notification(release), 
                    bot.loop
                )
                logger.info(f"üöÄ –û–±—Ä–∞–±–æ—Ç–∞–Ω —Ä–µ–ª–∏–∑: {release.get('tag_name', 'unknown')}")
                
        return jsonify({"status": "success"}), 200
        
    except Exception as e:
        logger.exception(f"üî• –û—à–∏–±–∫–∞ –≤–µ–±—Ö—É–∫–∞: {e}")
        return jsonify({"status": "error"}), 500

def verify_signature(payload, signature, secret):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å—å HMAC-SHA256 –≤–µ–±—Ö—É–∫–∞"""
    if not signature or not secret:
        return False
        
    try:
        digest = hmac.new(
            secret.encode('utf-8'), 
            payload, 
            hashlib.sha256
        ).hexdigest()
        
        return hmac.compare_digest(f"sha256={digest}", signature)
    except Exception:
        return False

async def send_release_notification(release):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —Ä–µ–ª–∏–∑–µ –≤ Discord"""
    try:
        channel = bot.get_channel(CHANNEL_ID)
        if not channel:
            logger.error(f"‚ùå –ö–∞–Ω–∞–ª {CHANNEL_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–ª–∏–∑–∞
        title = release.get('name', '–ù–æ–≤—ã–π —Ä–µ–ª–∏–∑')
        version = release.get('tag_name', 'v1.0.0')
        url = release.get('html_url', '')
        body = release.get('body', '–ù–æ–≤–∞—è —Å–µ—Ä–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞!')
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        description = body[:497] + "..." if len(body) > 500 else body

        # –°–æ–∑–¥–∞—ë–º embed
        embed = discord.Embed(
            title=f"üé¨ {title}",
            url=url,
            description=description,
            color=0x6A0DAD
        )
        embed.add_field(name="–í–µ—Ä—Å–∏—è", value=version)
        embed.set_footer(text="VexeraDubbing")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await channel.send(content="@everyone –ù–æ–≤–∞—è —Å–µ—Ä–∏—è –≥–æ—Ç–æ–≤–∞! üéâ", embed=embed)
        logger.info(f"üì¢ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª {channel.name}")
        
    except discord.Forbidden:
        logger.error("‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

def run_flask():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Flask —Å–µ—Ä–≤–µ—Ä"""
    try:
        logger.info(f"üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
        app.run(host='0.0.0.0', port=PORT, use_reloader=False)
    except Exception as e:
        logger.critical(f"üî• –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Flask: {e}")

def run_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Discord –±–æ—Ç–∞"""
    try:
        logger.info("ü§ñ –ó–∞–ø—É—Å–∫ Discord –±–æ—Ç–∞...")
        bot.run(DISCORD_TOKEN)
    except discord.LoginError:
        logger.critical("üîë –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω")
    except Exception as e:
        logger.critical(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    flask_thread = threading.Thread(target=run_flask, daemon=True)
    flask_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    run_bot()
